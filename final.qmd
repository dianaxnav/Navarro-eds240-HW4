---
title: "Final infographic"
author: "Diana Navarro"
date: 2024-03-09
format:
  html:
    embed-resources: true
---

## Load all libraries

```{r, message = F}
#load all the packages and libraries needed 
library(tidyverse)
library(janitor)
library(treemap)
library(plotly)
library(packcircles)
library(ggplot2)
library(viridis)
library(ggiraph)
library(showtext)
library(patchwork)
library(extrafont)

```

## Load in the data set

```{r, message = F}
#load in the dataset 
bananas <- read_csv(here::here("data","bananaindex.csv"))

#download Google Fonts
# Font_add_google searches google fonts repo and downloads the proper font files by name

font_add_google(name = "Khula", family = "khula")
font_add_google(name = "Montserrat", family = "montserrat")
showtext_auto() #this will help fonts show when you render

```

## Clean/wrangle data

```{r}
#clean up the names of the bananas dataset 
clean_bananas <- bananas %>% 
  clean_names() %>%  #clean up the names 
  group_by(food_cat) %>%  #group by the food cat to find the mean of each 
  summarize(mean = mean(bananas_index_kg))
```

## Do some data exploration

```{r}
#check out the dimensions 
#dim(bananas)

#unique(bananas$food_cat)
```

#Plot Circular Packing Plot 

### This will be the main plot that I will show in the infographic. This compares all food groups emissions to the banana. 
```{r, message = FALSE, warning = F}
# Add a column with the text you want to display for each bubble:
clean_bananas$text <- paste("Food Category: ",clean_bananas$food_cat, "\n", "value (kg):", clean_bananas$mean, "\n")

#n_distinct(clean_bananas$food_cat) #check how many categories you have 

#this function creates a gradient color palette arranged in 23 different colors 
my_palette <- colorRampPalette(c("darkolivegreen","sienna", "gold",
                                 "orange3", "orange2", "orange",
                                 "gold2","red4", "goldenrod1", "indianred4",
                                 "goldenrod2","olivedrab4",
                                 "saddlebrown", "salmon3",
                                 "darkolivegreen3"))(23)

# Generate the layout
packing <- circleProgressiveLayout(clean_bananas$mean, sizetype='area') #make the circle layout

data <- cbind(clean_bananas, packing) #combine your circle data to the banana data frame 

dat.gg <- circleLayoutVertices(packing, npoints = 23) #adjust the size of the plot 

# create the plot initilizaing geom_polygon 
packing <- ggplot() + 
  #this will create the circular plots based off food category, adjust the outline and transparency color of the plot 
  geom_polygon(data = dat.gg, aes(x,y,group = id, fill=id), alpha = 0.5) + 
  
  #set the color scheme 
  scale_fill_gradientn(colors = my_palette) + 
  
  #set text within the circles and edit font, and color
  geom_text(data = data, aes(x,y, size= mean, label = gsub("Group_", "", food_cat)), color="black", family = "montserrat") + 
  
  #scale the sizw of the text displayed in each circle
  scale_size_continuous(range = c(17, 50)) + 
  
  theme_void() + #remove all axes and plot background 
  
  #remove the legend 
  theme(legend.position="none", 
        
        #set the position of the plot 
        plot.margin=unit(c(0,0,0,0),"in")) + 
  
  coord_equal() + #balance coordinates 
  
  #set the title 
  labs(title = "Banana Index Values: Average Greenhouse Gas Emissions by Food Group in 2022",
       subtitle = "Emissions are measured in kilograms(kg)") + 
  
  #set the font 
  theme(text = element_text(family = "montserrat"), 
        
        #center position plot title 
        plot.title.position = "plot", 
        
        #edit the plot title by color, size, and bold 
        plot.title = element_text(face = "bold",
                                  size = 120,
                                  color = "tan4",
                                  hjust = 0.5), 
        
        #edit the plot subtitle by color, size, and center
        plot.subtitle = element_text(size = 100,
                                     face = "bold",
                                     color = "tan",
                                     hjust = 0.5),
        
        #set the plot background color 
        plot.background = element_rect(fill= "oldlace", 
                                       color = "oldlace"), 
        
        #set the panel background color
        panel.background = element_rect(fill = "oldlace", 
                                        color = "oldlace"), 
        
        #set the plot margin so its not on the edge of png 
        plot.margin = unit(c(0.3,0,0,0),"in")) + 
  
  # highlight top three highest emitters and banana category 
  gghighlight::gghighlight((radius > 1.8 | food_cat == "Banana"),
                           unhighlighted_params = list(colour = NULL, alpha = 0.3))

# specify file path/name and png resolution & size
ragg::agg_png(here::here("outputs", paste0("circularpacking", format(Sys.time(), "%Y%m%d_%H%M%S"), ".png")),
              res = 320, width = 23, height =21.5, units = "in")

packing 

```

# Make a scatterplot 

###The purpose of this visualization is to display the relationship between land use and emissions per kg. 

```{r, warning = FALSE, message = FALSE}
# Create the inset plot
p1 <- ggplot(data = bananas, aes(x = land_use_kg, y = emissions_kg)) + #call the data and x and y axis 
  
  geom_point(alpha = 0.5, color = "red4", size = 5) + #edit the size and color of points 
  
  theme_classic() +
  
  xlim(0, 15) + #set the limits of the points you want zoomed in
  ylim(0, 15) +
  
  labs(title = "Land Use > 15 (kg)") + #edit the title 
  
  theme(text = element_text(family = "montserrat"), #set the font
        
        #edit the text and color of plot title 
        plot.title = element_text(size = 80, 
                                  color = "tan4", 
                                  hjust = 0.5), 
        
        #set the plot background border and fill color to be transparent to create a light green border
        plot.background = element_rect(color = "darkolivegreen",
                                       fill = "transparent", 
                                       size = 2), 
        
        #edit the panel background color 
        panel.background = element_rect(fill = "oldlace", 
                                        color = "oldlace"), 
        
        axis.title.x = element_blank(), #remove the axis 
        axis.title.y = element_blank(), #remove the axis 
        
        #set the axis text color 
        axis.text = element_text(size = 80, color = "tan4")) +
  
  #highlight the banana category 
  gghighlight::gghighlight(food_cat == "Banana",
                           label_key = food_cat, 
                           use_direct_label = TRUE,
                           calculate_per_facet = TRUE, 
                           label_params = list(size = 17,
                                               fill = "oldlace"),
                           unhighlighted_params = list(colour = "orange", 
                                                       alpha = 0.2)) 


#call the data and set the x and y axis 
p2 <- ggplot(data = bananas, aes(x = land_use_kg, y = emissions_kg)) +
  
  #set the title and x and y axis 
  labs(title = "Relationship between Emissions and Land Use(kg) of Different Foods", y = "Emissions(kg)", x = "Land Use(kg)") +
  
  #set the theme (i like it plain)
  theme_classic() +
  
  #set this so that it removes the space between 0 and your starting plot point 
  scale_x_continuous(expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0)) +
  
  #set the color and size of the point 
  geom_point(alpha = 0.5, color = "red4", size = 5) +
  
    gghighlight::gghighlight(emissions_kg > 15,
                           label_key = food_cat, 
                           use_direct_label = TRUE,
                           calculate_per_facet = TRUE,
                           label_params = list(size = 17,
                                               fill = "oldlace"),
                           unhighlighted_params = list(colour = "orange", 
                                                       alpha = 0.2))  +
  
  #outline the circle im referring to from my inset element
  geom_rect(aes(xmin = 0, xmax = 15, ymin = 0,ymax = 15),
            color = "darkolivegreen",
            fill = "transparent",
            size = 1) +
  
  #set the best line of fit to see relationship 
  # geom_smooth(method = "lm", 
  #             se = FALSE, 
  #             color = "darkolivegreen3", #edit the color 
  #             linetype = "dashed") + #edit line type 
  
  #set theme and change font of all the plots
  theme(text = element_text(family = "montserrat"),
        
        #edit the plot title by color, size, and center
        plot.title = element_text(face = "bold", 
                                  size = 80, 
                                  color = "tan4", 
                                  hjust = 0.5),
        
        #edit the plot margin(give some space between top)
        plot.margin = unit(c(0.3,0,0,0),"in"),
        
        #set the plot background color 
        plot.background = element_rect(fill = "oldlace", 
                                       color = "oldlace"),
        #removes white space behind plot 
        
        #set the plot background color 
        panel.background = element_rect(fill = "oldlace", 
                                        color = "oldlace"),
        
        #set the axis text size and color 
        axis.text = element_text(size = 100, color = "tan4"),
        axis.title.y = element_text(size = 100, color = "tan4"),
        axis.title.x = element_text(size = 100, color = "tan4")
        ) 

#plot with the inset element and adjust margin 
scatterplot <- p2 + inset_element(p1, 
                                  left=0.5, 
                                  right=.9, 
                                  bottom=.1, 
                                  top=0.5) +
  
  #edit the whole patchworked plot and fix the colors 
  plot_annotation(theme = theme(
    plot.background = element_rect(fill = "oldlace", 
                                   color = "oldlace"),
    panel.background = element_rect(fill = "oldlace", 
                                    color = "oldlace")
    )
    )

# specify file path/name and png resolution & size
ragg::agg_png(here::here("outputs", paste0("scatter_plot", format(Sys.time(), "%Y%m%d_%H%M%S"), ".png")),
              res = 320, width = 15, height =10, units = "in")

scatterplot


```

# Bar Plot

### The purpose of this visualization is to display the exact emissions of each food entity for the three highest emitters(on average)
```{r, warning = FALSE, message = FALSE}

# Data Wrangling 
#subset the data for meat for bar plot 
b1 <- bananas %>%
  clean_names() %>% 
  filter(food_cat == "Meat") #filter by meat only 

#subset the data for dairy products for bar plot 
b2 <- bananas %>%
  clean_names() %>% 
  filter(food_cat == "Dairy")

#subset the data for seafood bar plot 
b3 <- bananas %>%
  clean_names() %>% 
  filter(food_cat == "Seafood")

# Reorder the levels of the entity variable based on bananas_index_kg
b1$entity <- factor(b1$entity, 
                    levels = b1$entity[order(b1$bananas_index_kg,
                                             decreasing = TRUE)])


# Create a bar plot of each category - meat

#call the data and assign the name 
q1 <- ggplot(b1, aes(y = emissions_kg, x = entity)) +
  
  #set the column color and transparency 
  geom_col(fill = "red4", alpha = 0.6) + 
  
  #label titles, did not list X axis bc names were given 
  labs(x = NULL, y = "Emissions(kg)", title = "Meats") +  
  
  #adjust theme (removed grid lines)
  theme_classic() +
  
  #use this to remove the space between 0 and y axis 
  scale_y_continuous(expand = c(0, 0)) + 
  
  #set the font 
  theme(text = element_text(family = "montserrat"),
        
        #adjust the title color, size, and center 
        plot.title = element_text(face = "bold",
                                  size = 100,
                                  color = "tan4",
                                  hjust = 0.5),
        
        #adjust the x axis text color and size 
        axis.title.x = element_text(size = 100,
                                    color = "tan4"),
        
        #set the plot background color 
        plot.background = element_rect(fill = "oldlace", 
                                       color = "oldlace"),
        
        #set the panel background color 
        panel.background = element_rect(fill = "oldlace", 
                                        color = "oldlace"),
        
        #set the axis text color and size
        axis.text = element_text(size = 100, color = "tan4")) + 
  
  #flip the bar 
  coord_flip()

# Reorder the levels of the entity variable based on bananas_index_kg
b2$entity <- factor(b2$entity, levels =
                      b2$entity[order(b2$bananas_index_kg,
                                      decreasing = TRUE)])

# create a bar plot of each category - dairy
q2 <- ggplot(b2, aes(y = emissions_kg, x = entity)) + #call the data 
  
  #set the color and transparency
  geom_col(fill = "gold", alpha = 0.6) + 
  
  #remove x axis name and edit y axis and title 
  labs(x = NULL, y = "Emissions(kg)", title = "Dairy Products") + 
  
  #set the theme to removing gridlines
  theme_classic() + 
  
  #remove the space between 0 and y axis 
  scale_y_continuous(expand = c(0, 0)) +
  
  #edit the theme, text, and, color (explained above)
  theme(text = element_text(family = "montserrat"),
        plot.title = element_text(face = "bold",
                                  size = 100,
                                  color = "tan4",
                                  hjust = 0.5),
        axis.title.x = element_text(size = 100,
                                    color = "tan4"),
        plot.background = element_rect(fill = "oldlace", 
                                       color = "oldlace"),
        panel.background = element_rect(fill = "oldlace", 
                                        color = "oldlace"),
        axis.text = element_text(size = 100, color = "tan4")) +
  
  #flip the coordinates
  coord_flip()

#repeat the same process as above 
# Reorder the levels of the entity variable based on bananas_index_kg
b3$entity <- factor(b3$entity, levels =
                      b3$entity[order(b3$bananas_index_kg,
                                      decreasing = TRUE)])

# Plot with reordered levels
q3 <- ggplot(b3, aes(x = entity, y = emissions_kg)) + 
  
  # edit the color and transparency 
  geom_col(fill = "darkolivegreen", alpha = 0.6) + 
  
  #edit the title 
  labs(x = NULL, y = "Emissions(kg)", title = "Seafood") + 
  
  #set theme 
  theme_classic() + 
  
  #remove space between 0 and y axis
  scale_y_continuous(expand = c(0, 0)) + 
  
  #edit theme elements(shown in bar plot 1 )
  theme(text = element_text(family = "montserrat"),
        plot.title = element_text(face = "bold", 
                                  size = 100, 
                                  color = "tan4", 
                                  hjust = 0.5),
        axis.title.x = element_text(size = 100, 
                                    color = "tan4"),
        plot.background = element_rect(fill = "oldlace", 
                                       color = "oldlace"),
        panel.background = element_rect(fill = "oldlace", 
                                        color = "oldlace"),
        axis.text = element_text(size = 100, color = "tan4")) +
  
  #flip the coordinates 
  coord_flip()


#patch up all the plots together
connected <-  (q1 + q2 + q3) 

#edit the entire plot together 
connected <- connected +
  plot_annotation(
    
    #set the title 
    title = "Breakdown of Emission Levels (kg) per Food Item among the Top Three Largest Food Groups",
    
    #set the font 
    theme = theme(text = element_text(family = "montserrat"),
                  
                  #edit plot title arguments by size, color, and center 
                  plot.title = element_text(face = "bold", 
                                            size = 120, 
                                            hjust = 0.5, 
                                            color = "tan4"),
                  
                  #set the panel background color 
                  panel.background = element_rect(fill =
                                                    "oldlace",
                                                  color =
                                                    "oldlace"),
                  
                  #edit the plot background color 
                  plot.background = element_rect(fill= "oldlace",
                                                 color =
                                                   "oldlace"),
                  
                  #set the margin 
                  plot.margin = unit(c(0.3,0,0,0),"in"))
    ) 

# specify file path/name and png resolution & size
ragg::agg_png(here::here("outputs", paste0("connected_bar", format(Sys.time(), "%Y%m%d_%H%M%S"), ".png")),
              res = 320, width = 30, height = 10, units = "in")

connected

```

```{r, warning = F, message = F}
# library(grid)
# 
# img <- png::readPNG(here::here("bananaindex.png"))
# 
# # This line allows for the plots to display all in one visualization 
# final_plot <- packing + scatterplot / connected + 
#   
#   # This function adjust the heights of the columns in the grid
#   plot_layout(
#     nrow = 2,
#     ncol = 1,
#     heights = c(20, 15, 15), 
#     widths = c(20,15, 15)
#   ) + 
#   
#   ## Here we are adding the annotation to the whole visualization by adding a title, subtitle, and caption 
#   plot_annotation( 
#   caption = "Visualization: Banana Index",
#   title = "Climate Impacts of Food Categories Compared to the Banana",
#   subtitle = str_wrap("The banana index provides a means to measure the greenhouse gas emissions associated with various foods, comparing them based on their weight, calorie content, or protein content in terms of equivalent bananas. These emissions are quantified in CO2-equivalents, accounting for non-CO2 gases by their respective impact on global warming over a 100-year period. The banana serves as a benchmark category against which other foods are compared.", 100),
#   
#   
#   # This function is adjusting the margins of each annotation by color, size, font, and placement 
#   theme = theme( 
#     plot.margin = margin(10,10,5,10),
#     plot.title = element_text(family = "montserrat", size = 80, color = "darkolivegreen", face = "bold", hjust = 0.5, margin = margin(10,10,10,0)),
#     plot.subtitle = element_text(family = "montserrat", size = 65, color = "moccasin", hjust = 0.5, margin = margin(5,5,20,20), face = "bold"),
#     plot.caption = element_text(family = "montserrat", size = 55, color = "darkolivegreen", hjust = 0.95, margin = margin(20,10,5,10)),
#     plot.background = element_rect(fill = "black")
#   ))
# 
# #save plot as PNG
# #open plotting device to draw plot to a PNG file
# 
# # specify file path/name and png resolution & size
# ragg::agg_png(here::here("outputs", paste0("banana_index", format(Sys.time(), "%Y%m%d_%H%M%S"), ".png")), 
#               res = 320, width = 15, height =20, units = "in")
# 
# #plot object that you want to draw
# final_plot
# 
# #turn off plotting device
# 
# # once off, you should see your .png file appear in outputs/ folder
# dev.off()
```


